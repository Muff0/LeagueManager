@page "/notifications"
@using LeagueManager.ViewModel
@inject Services.MainService MainService
@rendermode InteractiveServer

<PageTitle>Notifications</PageTitle>

<h1>Sync</h1>

<p role="status">@message</p>


<button class="btn btn-primary" @onclick="SendNotification">Test Notification</button>


<div class="grid-container">
    <EditForm Model="@notificationModel">
        <DateTimeInput TValue="DateTime?" @bind-Value="notificationModel.Deadline"></DateTimeInput>
        <InputNumber @bind-Value="notificationModel.Round" />
        <button type="button" @onclick="SendRoundStartNotification">Send</button>
    </EditForm>
</div>

@code {

    private NotificationViewModel notificationModel = new();
    private string message = "Loading...";
    private async Task SendNotification()
    {
        try
        {

            await MainService.SendUpcomingMatchesNotification();
        }
        catch (Exception e)
        {
            message = "Error";
        }
    }
    private async Task SendRoundStartNotification()
    {
        try
        {

            await MainService.SendRoundStartNotification(notificationModel.Round, notificationModel.Deadline.GetValueOrDefault());
        }
        catch (Exception e)
        {
            message = "Error";
        }
    }
    
}
